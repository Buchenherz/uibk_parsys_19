<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20192.19.1017.1638                               -->
<workbook original-version='18.1' source-build='2019.2.5 (20192.19.1017.1638)' source-platform='mac' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <SheetIdentifierTracking ignorable='true' predowngraded='true' />
    <WindowsPersistSimpleIdentifiers />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='2D_n-body_stats' inline='true' name='federated.0tly0400sn2n6q17exj9q0t66lab' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='2D_n-body_stats' name='textscan.1g1kido1vtig9g1blqe2j1uwc7s0'>
            <connection class='textscan' directory='/Users/clemenspfister/Documents/GitRepos/uibk_parsys_19/proseminar/05/statistics' filename='2D_n-body_stats.csv' password='' server='' />
          </named-connection>
          <named-connection caption='nbody-mpi' name='textscan.10h86h51hmn6ow11na08j08ax00c'>
            <connection class='textscan' directory='/Users/clemenspfister/Documents/GitRepos/uibk_parsys_19/proseminar/06/statistics' filename='nbody-mpi.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <relation join='left' type='join'>
          <clause type='join'>
            <expression op='AND'>
              <expression op='='>
                <expression op='[2D_n-body_stats.csv].[particle_count]' />
                <expression op='IF [nbody-mpi.csv].[particle_count] == 2016 then 2000&#10;ELSEIF [nbody-mpi.csv].[particle_count] == 1200 then 1000&#10;ELSEIF [nbody-mpi.csv].[particle_count] == 3000 then 3000&#10;ELSEIF [nbody-mpi.csv].[particle_count] == 4000 then 4000&#10;ELSEIF [nbody-mpi.csv].[particle_count] == 5000 then 5000&#10;ELSE 100&#10;END' />
              </expression>
              <expression op='='>
                <expression op='[2D_n-body_stats.csv].[Nx]' />
                <expression op='[nbody-mpi.csv].[Nx]' />
              </expression>
              <expression op='='>
                <expression op='[2D_n-body_stats.csv].[Ny]' />
                <expression op='[nbody-mpi.csv].[Ny]' />
              </expression>
            </expression>
          </clause>
          <relation connection='textscan.1g1kido1vtig9g1blqe2j1uwc7s0' name='2D_n-body_stats.csv' table='[2D_n-body_stats#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en' separator=','>
              <column datatype='integer' name='Nx' ordinal='0' />
              <column datatype='integer' name='Ny' ordinal='1' />
              <column datatype='integer' name='particle_count' ordinal='2' />
              <column datatype='integer' name='T' ordinal='3' />
              <column datatype='real' name='walltime' ordinal='4' />
              <column datatype='integer' name='max_mass' ordinal='5' />
            </columns>
          </relation>
          <relation connection='textscan.10h86h51hmn6ow11na08j08ax00c' name='nbody-mpi.csv' table='[nbody-mpi#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en' separator=','>
              <column datatype='integer' name='No_ranks' ordinal='0' />
              <column datatype='integer' name='Nx' ordinal='1' />
              <column datatype='integer' name='Ny' ordinal='2' />
              <column datatype='integer' name='particle_count' ordinal='3' />
              <column datatype='integer' name='T' ordinal='4' />
              <column datatype='real' name='mpitime' ordinal='5' />
              <column datatype='integer' name='max_mass' ordinal='6' />
            </columns>
          </relation>
        </relation>
        <cols>
          <map key='[No_ranks]' value='[nbody-mpi.csv].[No_ranks]' />
          <map key='[Nx (nbody-mpi.csv)]' value='[nbody-mpi.csv].[Nx]' />
          <map key='[Nx]' value='[2D_n-body_stats.csv].[Nx]' />
          <map key='[Ny (nbody-mpi.csv)]' value='[nbody-mpi.csv].[Ny]' />
          <map key='[Ny]' value='[2D_n-body_stats.csv].[Ny]' />
          <map key='[T (nbody-mpi.csv)]' value='[nbody-mpi.csv].[T]' />
          <map key='[T]' value='[2D_n-body_stats.csv].[T]' />
          <map key='[max_mass (nbody-mpi.csv)]' value='[nbody-mpi.csv].[max_mass]' />
          <map key='[max_mass]' value='[2D_n-body_stats.csv].[max_mass]' />
          <map key='[mpitime]' value='[nbody-mpi.csv].[mpitime]' />
          <map key='[particle_count (nbody-mpi.csv)]' value='[nbody-mpi.csv].[particle_count]' />
          <map key='[particle_count]' value='[2D_n-body_stats.csv].[particle_count]' />
          <map key='[walltime]' value='[2D_n-body_stats.csv].[walltime]' />
        </cols>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[2D_n-body_stats.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nx</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Nx]</local-name>
            <parent-name>[2D_n-body_stats.csv]</parent-name>
            <remote-alias>Nx</remote-alias>
            <ordinal>0</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ny</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ny]</local-name>
            <parent-name>[2D_n-body_stats.csv]</parent-name>
            <remote-alias>Ny</remote-alias>
            <ordinal>1</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>particle_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[particle_count]</local-name>
            <parent-name>[2D_n-body_stats.csv]</parent-name>
            <remote-alias>particle_count</remote-alias>
            <ordinal>2</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>T</remote-name>
            <remote-type>20</remote-type>
            <local-name>[T]</local-name>
            <parent-name>[2D_n-body_stats.csv]</parent-name>
            <remote-alias>T</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>walltime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[walltime]</local-name>
            <parent-name>[2D_n-body_stats.csv]</parent-name>
            <remote-alias>walltime</remote-alias>
            <ordinal>4</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_mass</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_mass]</local-name>
            <parent-name>[2D_n-body_stats.csv]</parent-name>
            <remote-alias>max_mass</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[nbody-mpi.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_GB&quot;</attribute>
              <attribute datatype='string' name='currency'>&quot;¤&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>No_ranks</remote-name>
            <remote-type>20</remote-type>
            <local-name>[No_ranks]</local-name>
            <parent-name>[nbody-mpi.csv]</parent-name>
            <remote-alias>No_ranks</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Nx</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Nx (nbody-mpi.csv)]</local-name>
            <parent-name>[nbody-mpi.csv]</parent-name>
            <remote-alias>Nx</remote-alias>
            <ordinal>7</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Ny</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Ny (nbody-mpi.csv)]</local-name>
            <parent-name>[nbody-mpi.csv]</parent-name>
            <remote-alias>Ny</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>particle_count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[particle_count (nbody-mpi.csv)]</local-name>
            <parent-name>[nbody-mpi.csv]</parent-name>
            <remote-alias>particle_count</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>T</remote-name>
            <remote-type>20</remote-type>
            <local-name>[T (nbody-mpi.csv)]</local-name>
            <parent-name>[nbody-mpi.csv]</parent-name>
            <remote-alias>T</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>mpitime</remote-name>
            <remote-type>5</remote-type>
            <local-name>[mpitime]</local-name>
            <parent-name>[nbody-mpi.csv]</parent-name>
            <remote-alias>mpitime</remote-alias>
            <ordinal>11</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>max_mass</remote-name>
            <remote-type>20</remote-type>
            <local-name>[max_mass (nbody-mpi.csv)]</local-name>
            <parent-name>[nbody-mpi.csv]</parent-name>
            <remote-alias>max_mass</remote-alias>
            <ordinal>12</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column aggregation='Sum' caption='Trend' datatype='real' name='[Calculation_63894874059993089]' role='dimension' type='quantitative'>
        <calculation class='tableau' formula='0.493444*ln([walltime]) + 4.36173' />
      </column>
      <column caption='Number of Ranks' datatype='integer' name='[No_ranks]' role='measure' type='ordinal' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[Ny]' role='measure' type='quantitative' />
      <column caption='Max Mass (Nbody-Mpi.Csv)' datatype='integer' name='[max_mass (nbody-mpi.csv)]' role='measure' type='quantitative' />
      <column caption='Max Mass' datatype='integer' name='[max_mass]' role='measure' type='quantitative' />
      <column caption='Mpitime' datatype='real' name='[mpitime]' role='measure' type='quantitative' />
      <column caption='MPI Particle Count' datatype='integer' name='[particle_count (nbody-mpi.csv)]' role='measure' type='quantitative' />
      <column caption='Particle Count' datatype='integer' name='[particle_count]' role='measure' type='quantitative' />
      <column caption='seqtime' datatype='real' name='[walltime]' role='measure' type='quantitative' />
      <column-instance column='[No_ranks]' derivation='Attribute' name='[attr:No_ranks:ok]' pivot='key' type='ordinal' />
      <column-instance column='[particle_count]' derivation='Attribute' name='[attr:particle_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[0-100 (copy)]' derivation='InOut' name='[io:0-100 (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[200-1000 (copy)]' derivation='InOut' name='[io:200-1000 (copy):nk]' pivot='key' type='nominal' />
      <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal'>
        <aliases>
          <alias key='true' value='Particle Count until 100' />
        </aliases>
      </column-instance>
      <column-instance column='[No_ranks]' derivation='None' name='[none:No_ranks:ok]' pivot='key' type='ordinal' />
      <column-instance column='[Ny]' derivation='None' name='[none:Ny:qk]' pivot='key' type='quantitative' />
      <column-instance column='[particle_count]' derivation='None' name='[none:particle_count:ok]' pivot='key' type='ordinal' />
      <column-instance column='[particle_count]' derivation='None' name='[none:particle_count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[No_ranks]' derivation='Sum' name='[sum:No_ranks:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Ny]' derivation='Sum' name='[sum:Ny:qk]' pivot='key' type='quantitative' />
      <column-instance column='[particle_count]' derivation='Sum' name='[sum:particle_count:qk]' pivot='key' type='quantitative' />
      <group caption='200-1000' name='[0-100 (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:particle_count:ok]' member='200' />
          <groupfilter function='member' level='[none:particle_count:ok]' member='300' />
          <groupfilter function='member' level='[none:particle_count:ok]' member='400' />
          <groupfilter function='member' level='[none:particle_count:ok]' member='500' />
          <groupfilter function='member' level='[none:particle_count:ok]' member='600' />
          <groupfilter function='member' level='[none:particle_count:ok]' member='700' />
          <groupfilter function='member' level='[none:particle_count:ok]' member='800' />
          <groupfilter function='member' level='[none:particle_count:ok]' member='900' />
          <groupfilter function='member' level='[none:particle_count:ok]' member='1000' />
        </groupfilter>
      </group>
      <group caption='2 Ranks' name='[2 Ranks]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter expression='COUNTD([max_mass]) == 0' function='filter' user:ui-filter-by-field='true' user:ui-marker='filter-by'>
          <groupfilter function='member' level='[No_ranks]' member='2' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
        </groupfilter>
      </group>
      <group caption='2000-5000' name='[200-1000 (copy)]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter function='union' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
          <groupfilter function='member' level='[none:particle_count:ok]' member='2000' />
          <groupfilter function='member' level='[none:particle_count:ok]' member='3000' />
          <groupfilter function='member' level='[none:particle_count:ok]' member='4000' />
          <groupfilter function='member' level='[none:particle_count:ok]' member='5000' />
        </groupfilter>
      </group>
      <group caption='0-100' name='[Set 1]' name-style='unqualified' user:ui-builder='filter-group'>
        <groupfilter from='10' function='range' level='[none:particle_count:ok]' to='100' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </group>
      <layout dim-ordering='alphabetic' dim-percentage='0.179587' group-percentage='0.232558' measure-ordering='alphabetic' measure-percentage='0.587855' show-aliased-fields='true' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' palette='tableau20_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0tly0400sn2n6q17exj9q0t66lab]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0tly0400sn2n6q17exj9q0t66lab].[sum:particle_count:qk]&quot;</bucket>
            </map>
            <map to='#a0cbe8'>
              <bucket>&quot;[federated.0tly0400sn2n6q17exj9q0t66lab].[sum:No_ranks:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tly0400sn2n6q17exj9q0t66lab].[none:Ny:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0tly0400sn2n6q17exj9q0t66lab].[sum:Ny:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tly0400sn2n6q17exj9q0t66lab].[attr:particle_count:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0tly0400sn2n6q17exj9q0t66lab].[none:particle_count:qk]&quot;</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[Ny]' palette='orange_10_0' type='interpolated' />
          <encoding attr='color' field='[io:Set 1:nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:0-100 (copy):nk]' type='palette'>
            <map to='#4e79a7'>
              <bucket>true</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>false</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[0-100 (copy)]' palette='orange_10_0' type='palette'>
            <map to='#9e3d22'>
              <bucket>(1000)</bucket>
            </map>
            <map to='#b34823'>
              <bucket>(900)</bucket>
            </map>
            <map to='#c85322'>
              <bucket>(800)</bucket>
            </map>
            <map to='#dc5f20'>
              <bucket>(700)</bucket>
            </map>
            <map to='#ed6f20'>
              <bucket>(600)</bucket>
            </map>
            <map to='#f2862d'>
              <bucket>(500)</bucket>
            </map>
            <map to='#f59e3e'>
              <bucket>(400)</bucket>
            </map>
            <map to='#f8b35f'>
              <bucket>(300)</bucket>
            </map>
            <map to='#ffc685'>
              <bucket>(200)</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[io:Set 1:nk]&#10;[io:0-100 (copy):nk]&#10;[io:200-1000 (copy):nk]' type='palette'>
            <map to='#4e79a7'>
              <multibucket>
                <bucket>true</bucket>
                <bucket>false</bucket>
                <bucket>false</bucket>
              </multibucket>
            </map>
            <map to='#e15759'>
              <multibucket>
                <bucket>false</bucket>
                <bucket>false</bucket>
                <bucket>true</bucket>
              </multibucket>
            </map>
            <map to='#f28e2b'>
              <multibucket>
                <bucket>false</bucket>
                <bucket>true</bucket>
                <bucket>false</bucket>
              </multibucket>
            </map>
          </encoding>
          <encoding attr='color' field='[none:No_ranks:ok]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#90728f'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4</bucket>
            </map>
          </encoding>
          <encoding attr='color' field='[attr:No_ranks:ok]' palette='tableau10_10_0' type='palette'>
            <map to='#4e79a7'>
              <bucket>2</bucket>
            </map>
            <map to='#e15759'>
              <bucket>8</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>4</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <date-options start-of-week='monday' />
      <field-sort-info field-sort-order-type='custom-order'>
        <field-sort-custom-order field='Nx' />
        <field-sort-custom-order field='Ny' />
        <field-sort-custom-order field='particle_count' />
        <field-sort-custom-order field='T' />
        <field-sort-custom-order field='walltime' />
        <field-sort-custom-order field='max_mass' />
        <field-sort-custom-order field='No_ranks' />
        <field-sort-custom-order field='Calculation_63894874059993089' />
        <field-sort-custom-order field='Nx (nbody-mpi.csv)' />
        <field-sort-custom-order field='Ny (nbody-mpi.csv)' />
        <field-sort-custom-order field='particle_count (nbody-mpi.csv)' />
        <field-sort-custom-order field='T (nbody-mpi.csv)' />
        <field-sort-custom-order field='mpitime' />
        <field-sort-custom-order field='max_mass (nbody-mpi.csv)' />
      </field-sort-info>
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Particle Count vs Walltime in seconds'>
      <layout-options export-center-horz='true' export-center-vert='true' export-legend-direction='horizontal' export-legend-location='bottom' export-margin-bottom='0.23622' export-margin-left='0.23622' export-margin-right='0.23622' export-margin-top='0.23622' export-orientation='landscape'>
        <caption>
          <formatted-text>
            <run fontcolor='#000000'>Walltime vs. Particle Count.</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000'>The power trendline in orange is calulated by tableau using the following equation: </run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000'>Y = exp(b0)* exp(b1 * X)</run>
            <run>Æ&#10;</run>
            <run fontcolor='#000000'>With an exponential model, the response variable is transformed by the natural log before estimation of the model so the marks plotted in your view are found by plugging in various explanatory values to find values of ln(Y).</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2D_n-body_stats' name='federated.0tly0400sn2n6q17exj9q0t66lab' />
          </datasources>
          <datasource-dependencies datasource='federated.0tly0400sn2n6q17exj9q0t66lab'>
            <column-instance column='[particle_count]' derivation='None' name='[none:particle_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[walltime]' derivation='None' name='[none:walltime:qk]' pivot='key' type='quantitative' />
            <column caption='Particle Count' datatype='integer' name='[particle_count]' role='measure' type='quantitative' />
            <column caption='seqtime' datatype='real' name='[walltime]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:walltime:qk]' scope='cols' value='Walltime (s)' />
            <encoding attr='space' class='0' field='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:walltime:qk]' field-type='quantitative' scale='log' scope='cols' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0tly0400sn2n6q17exj9q0t66lab].[:Measure Names]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='power' />
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
              <style-rule element='trendline'>
                <format attr='line-visibility' value='on' />
                <format attr='line-pattern-only' value='dotted' />
                <format attr='stroke-color' value='#f9a655ce' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:particle_count:qk]</rows>
        <cols>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:walltime:qk]</cols>
      </table>
      <simple-id uuid='{3B125C7F-FF3A-4DCD-B64D-52A2239A0BB5}' />
    </worksheet>
    <worksheet name='Runtime of MPI'>
      <layout-options export-center-horz='true' export-center-vert='true' export-legend-direction='horizontal' export-legend-location='bottom' export-orientation='landscape' export-scale-fitpage='false' export-scale-mode-auto='false' export-scale-percent='50' />
      <table>
        <view>
          <datasources>
            <datasource caption='2D_n-body_stats' name='federated.0tly0400sn2n6q17exj9q0t66lab' />
          </datasources>
          <datasource-dependencies datasource='federated.0tly0400sn2n6q17exj9q0t66lab'>
            <column caption='Number of Ranks' datatype='integer' name='[No_ranks]' role='measure' type='ordinal' />
            <column-instance column='[No_ranks]' derivation='Attribute' name='[attr:No_ranks:ok]' pivot='key' type='ordinal' />
            <column caption='Mpitime' datatype='real' name='[mpitime]' role='measure' type='quantitative' />
            <column-instance column='[mpitime]' derivation='None' name='[none:mpitime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[particle_count (nbody-mpi.csv)]' derivation='None' name='[none:particle_count (nbody-mpi.csv):ok]' pivot='key' type='ordinal' />
            <column caption='MPI Particle Count' datatype='integer' name='[particle_count (nbody-mpi.csv)]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tly0400sn2n6q17exj9q0t66lab].[attr:No_ranks:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[attr:No_ranks:ok]' member='2' />
              <groupfilter function='member' level='[attr:No_ranks:ok]' member='4' />
              <groupfilter function='member' level='[attr:No_ranks:ok]' member='8' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.0tly0400sn2n6q17exj9q0t66lab].[attr:No_ranks:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:mpitime:qk]' field-type='quantitative' scale='log' scope='rows' type='space' />
          </style-rule>
        </style>
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Bar' />
            <encodings>
              <color column='[federated.0tly0400sn2n6q17exj9q0t66lab].[attr:No_ranks:ok]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='wrap' value='off' />
                <format attr='text-orientation' value='-90' />
                <format attr='vertical-align' value='top' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-labels-cull' value='false' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:mpitime:qk]</rows>
        <cols>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:particle_count (nbody-mpi.csv):ok]</cols>
      </table>
      <simple-id uuid='{85E16481-A427-45F8-8E99-A61750AAAA97}' />
    </worksheet>
    <worksheet name='Walltime vs Particle Count'>
      <layout-options export-center-horz='true' export-center-vert='true' export-legend-direction='horizontal' export-legend-location='bottom' export-margin-bottom='0.23622' export-margin-left='0.23622' export-margin-right='0.23622' export-margin-top='0.23622' export-orientation='landscape' export-scale-mode-auto='false' export-scale-percent='75' export-smart-breaks='false'>
        <caption>
          <formatted-text>
            <run fontcolor='#000000'>Walltime vs. Particle Count. Colors represent different amount of ranks used. Faded out are the sequential results from last week.</run>
          </formatted-text>
        </caption>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='2D_n-body_stats' name='federated.0tly0400sn2n6q17exj9q0t66lab' />
          </datasources>
          <datasource-dependencies datasource='federated.0tly0400sn2n6q17exj9q0t66lab'>
            <column caption='Number of Ranks' datatype='integer' name='[No_ranks]' role='measure' type='ordinal' />
            <column-instance column='[0-100 (copy)]' derivation='InOut' name='[io:0-100 (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[200-1000 (copy)]' derivation='InOut' name='[io:200-1000 (copy):nk]' pivot='key' type='nominal' />
            <column-instance column='[Set 1]' derivation='InOut' name='[io:Set 1:nk]' pivot='key' type='nominal'>
              <aliases>
                <alias key='true' value='Particle Count until 100' />
              </aliases>
            </column-instance>
            <column caption='Mpitime' datatype='real' name='[mpitime]' role='measure' type='quantitative' />
            <column-instance column='[No_ranks]' derivation='None' name='[none:No_ranks:ok]' pivot='key' type='ordinal' />
            <column-instance column='[mpitime]' derivation='None' name='[none:mpitime:qk]' pivot='key' type='quantitative' />
            <column-instance column='[particle_count]' derivation='None' name='[none:particle_count:ok]' pivot='key' type='ordinal' />
            <column-instance column='[particle_count]' derivation='None' name='[none:particle_count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[walltime]' derivation='None' name='[none:walltime:qk]' pivot='key' type='quantitative' />
            <column caption='Particle Count' datatype='integer' name='[particle_count]' role='measure' type='quantitative' />
            <column caption='seqtime' datatype='real' name='[walltime]' role='measure' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:No_ranks:ok]'>
            <groupfilter function='union' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate'>
              <groupfilter function='member' level='[none:No_ranks:ok]' member='2' />
              <groupfilter function='member' level='[none:No_ranks:ok]' member='4' />
              <groupfilter function='member' level='[none:No_ranks:ok]' member='8' />
            </groupfilter>
          </filter>
          <filter class='quantitative' column='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:particle_count:qk]' included-values='in-range'>
            <min>10</min>
            <max>5000</max>
          </filter>
          <slices>
            <column>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:particle_count:qk]</column>
            <column>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:No_ranks:ok]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:particle_count:qk]' field-type='quantitative' max='5256' min='0' range-type='fixed' scope='cols' type='space' />
            <format attr='title' class='0' field='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:walltime:qk]' scope='rows' value='Walltime (s)' />
            <encoding attr='space' class='0' field='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:mpitime:qk]' field-type='quantitative' fold='true' scope='rows' synchronized='true' type='space' />
            <format attr='render-fold-reversed' value='true' />
            <format attr='title' class='0' field='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:mpitime:qk]' scope='rows' value='Walltime (s)' />
          </style-rule>
          <style-rule element='cell'>
            <format attr='text-format' field='[federated.0tly0400sn2n6q17exj9q0t66lab].[io:0-100 (copy):nk]' value='*True/False' />
          </style-rule>
        </style>
        <panes>
          <pane id='16' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='shape' value='triangle' />
                <format attr='mark-labels-mode' value='all' />
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='true' />
              </style-rule>
            </style>
          </pane>
          <pane id='17' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:walltime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0tly0400sn2n6q17exj9q0t66lab].[io:Set 1:nk]' />
              <color column='[federated.0tly0400sn2n6q17exj9q0t66lab].[io:0-100 (copy):nk]' />
              <color column='[federated.0tly0400sn2n6q17exj9q0t66lab].[io:200-1000 (copy):nk]' />
            </encodings>
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='shape' value='triangle' />
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-transparency' value='109' />
                <format attr='mark-labels-cull' value='false' />
                <format attr='mark-labels-mode' value='range' />
              </style-rule>
            </style>
          </pane>
          <pane id='18' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:mpitime:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Line' />
            <encodings>
              <color column='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:No_ranks:ok]' />
            </encodings>
            <trendline enable-confidence-bands='false' enable-instant-analytics='true' enabled='true' exclude-color='false' exclude-intercept='false' fit='linear' />
            <style>
              <style-rule element='cell'>
                <format attr='wrap' value='auto' />
                <format attr='text-orientation' value='0' />
                <format attr='vertical-align' value='auto' />
                <format attr='text-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='shape' value='triangle' />
                <format attr='mark-color' value='#f9a655' />
                <format attr='mark-transparency' value='255' />
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-mode' value='all' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>([federated.0tly0400sn2n6q17exj9q0t66lab].[none:walltime:qk] + [federated.0tly0400sn2n6q17exj9q0t66lab].[none:mpitime:qk])</rows>
        <cols>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:particle_count:qk]</cols>
        <mark-labels>
          <mark-label id='0' label-state='on'>
            <tuple-reference>
              <tuple-descriptor>
                <pane-descriptor>
                  <x-fields>
                    <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:particle_count:qk]</field>
                  </x-fields>
                  <y-fields>
                    <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:walltime:qk]</field>
                  </y-fields>
                </pane-descriptor>
                <columns>
                  <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[io:0-100 (copy):nk]</field>
                  <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[io:200-1000 (copy):nk]</field>
                  <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[io:Set 1:nk]</field>
                  <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:particle_count:qk]</field>
                  <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:walltime:qk]</field>
                </columns>
              </tuple-descriptor>
              <tuple>
                <value>false</value>
                <value>true</value>
                <value>false</value>
                <value>2000</value>
                <value>683.26999999999998</value>
              </tuple>
            </tuple-reference>
          </mark-label>
        </mark-labels>
      </table>
      <simple-id uuid='{39B0FEFD-7CF8-41EA-9A0C-29C3DD395688}' />
    </worksheet>
  </worksheets>
  <windows source-height='30'>
    <window class='worksheet' name='Particle Count vs Walltime in seconds'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='96'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='7' param='[federated.0tly0400sn2n6q17exj9q0t66lab].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[:Measure Names]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[io:2 Ranks:nk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:Calculation_63894874059993089:ok]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:Calculation_63894874059993089:qk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:mpitime:qk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:particle_count:qk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:walltime:qk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[sum:Calculation_63894874059993089:qk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7E8C2E8D-8D15-4EA1-8963-1B93F0465A2D}' />
    </window>
    <window class='worksheet' maximized='true' name='Walltime vs Particle Count'>
      <cards>
        <edge name='left'>
          <strip size='197'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='bottom'>
          <strip size='94'>
            <card type='caption' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='18' param='[federated.0tly0400sn2n6q17exj9q0t66lab].[none:No_ranks:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[io:0-100 (copy):nk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[io:200-1000 (copy):nk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[io:Set 1:nk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:No_ranks:ok]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:Ny:qk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:particle_count:qk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:walltime:qk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[sum:No_ranks:ok]</field>
          </color-one-way>
        </highlight>
        <floating-toolbar-visibility value='2' />
      </viewpoint>
      <simple-id uuid='{7D52F33C-1A25-456C-9A34-7DEB4974B457}' />
    </window>
    <window class='worksheet' name='Runtime of MPI'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='31'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card pane-specification-id='1' param='[federated.0tly0400sn2n6q17exj9q0t66lab].[attr:No_ranks:ok]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <zoom type='fit-width' />
        <highlight>
          <color-one-way>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[none:mpitime:qk]</field>
            <field>[federated.0tly0400sn2n6q17exj9q0t66lab].[sum:No_ranks:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{7A52A55C-2CF5-4790-9BA1-D907BCD33D83}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='384' name='Particle Count vs Walltime in seconds' width='384'>
      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
      gg==
    </thumbnail>
    <thumbnail height='384' name='Runtime of MPI' width='384'>
      iVBORw0KGgoAAAANSUhEUgAAAYAAAAGACAYAAACkx7W/AAAACXBIWXMAAA7DAAAOwwHHb6hk
      AAAgAElEQVR4nO3da2xU953/8c85M2dmbI8vgMGDMWCMCTQxNOkFA0rCzU1oS1tU7UqtWqlV
      u6p2/1rto32w6v5VtX9tW6mP+mB3Vem/Wm30342iVqqaFkh2caBNGhcampBwMSYOFwOxCb4M
      tseeyzln/g9cpqFNwKQ+l/F5vx7NjO2Zb375cT7z+/3OOT+jXC6XBQCIHDPoAgAAwSAAACCi
      CAAAiCgCAAAiigAAgIgiAACEnuM4yuVyd7yWzWY1NTX1vn9TKpXESY53F/v2t7/97aCLAFDd
      /v7v/14XLlzQ1q1b9cMf/lC/+MUv1NzcrG9+85vq6+tTPp/Xq6++qmKxqNbWVh06dEg//OEP
      9atf/UqNjY1atWrVe77vz372My1ZskTFYlGvvPKKOjo6Kj87duyYstms1qxZc8fflEol/eu/
      /quee+453bx5U11dXfP6b3BdV08//bQ6OztlWdYHb4wqEg+6AADVL5PJaGxsTDdv3tTU1JSa
      m5slSXv37tWjjz6q//qv/1J7e3vl98vlsr74xS+qvr5ex48f17lz59Tf36/t27dr9erVOnz4
      sKampjQ6OqrXXntNBw4c0PDwsK5evap/+Zd/UWtrq1atWqX6+nr927/9m06fPq09e/boc5/7
      nN566y0ZhqHvfOc7MgxDBw8e1KFDh7Ru3Tp9+tOf1oULF9TV1aWzZ89qeHhYly9fVjwe14ED
      B/Tss8/q5s2b+trXvqaGhoaAWtM/TAEB+LNZlqXW1lb19fVp9erVMs25Q8t///d/60c/+pF2
      7979J3/z1FNP6Sc/+Yn27t2rrq4utba26pVXXlGxWFQikdB3v/tdbd++XV//+te1fPly5XI5
      9fX16S//8i/1d3/3d6qtrdXo6KjOnj2rj3/84zpx4oQcx1GxWFRDQ4MMw5Bt23rjjTf0ve99
      T7W1tbp06ZJyuZxs29bMzIxM09Tf/u3fqq2tTS0tLdq6dau+/vWvR+LgLxEAABbIAw88oN7e
      Xq1fv77y2pNPPqnvf//72r59+5/8/le+8hV997vf1fLly/Xcc89p3759qq2tlSRt2bJFlmXJ
      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
      pOGCIwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='384' name='Walltime vs Particle Count' width='384'>
      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
      Vnk8Ln3m4QioKnpHO1okIgO39eySy3UBbKSrzsQP+LFjx0gkEqRSKaamppqBxzNnzhAIBPjU
      pz51Yyd4lcxUgXP48GGeeuop/H4/AwMDlEolDh06REtLCwsWLODRRx+90VO8Kmbq+3ExngK4
      xpx47TXaEuM4U1PNykm3UCT4q7/K66czPPezI5woKwyUJ7m3fJZlVhpTEYQ/8hGiH/8YU19/
      AmFb5/UhCaG1xOUhzcuXYyUSiEpFFg75fKh+3zXvFDiTFYDruhw7dowXXniBBQsWsHnzZlRV
      5Vvf+hbd3d380i/90o2e4lUxkwVOw3cfCARm9DrO52ZZx0xSANMiCPzzsEZHKb/+hsxeCYex
      VJ1aazvjqRJ/t+M0mlXlN9fP4tgrOykvX8DAr/+JbPtaz8/u+MK/e8/rm9PkrIHpiuu6vPHG
      GySTSZYuXYoQgr/6q79iYGCAe++990ZP70NJI+jn4fGLMCM+QcH16+n+xCcoVCx+dvAs/7Lj
      GH2tUT6/egl/uWgQU7F5/L//Ld/fvYs/e+jj6NO06m6mksvl+PSnP00ikeCb3/wmExMTrFmz
      prkT8PDwmJnMCAVQqDq8sPc0L+w+Qa5U5dZFvdy7di5Bn0E4YFKpVCiXy8yePftGT/Wm5I03
      3uCNN96gUqmwefNmDh48yNDQEK+//jobNmy4pmcweHh4XD9mhAJ463iCVw6kWDW/mwfWzWNe
      bwuaJi3PWq3Gk08+iWEYPPzwwxQbx8B5XDPuv/9+7r77bhRFwTAMNmzYMGN8nB4eHu/OjFAA
      c3vi/PEti5nX14J2kcvBdV22b9/OkSNHcF2Xr371qzdoljc35jU6JtDDw2P6MCOygKbTofBX
      y0zOArqYmZTl8F7cLFkn3jqmFzPp++FF8Dw8PDw+pHgKwMPDw+NDiqcAPDw8PD6keArAw8PD
      40OKpwA8PDw8PqR4CsDDw8PjQ8olaaDpdJpCoXCj5nNZarXaTZGH7jjOZc88nmk4joPaODN3
      BnMzvR/eOqYPM+n7MSPqAG4GBSCEwLKsGb8OkO+HYRgz4gP+XtwMnyvw1jHdsCwLvXFW9jTH
      cwF5eHh4fEiZEQrgZtgWgreO6Ya3junFzbKOmdQhd0a4gDw8PDw8rj0zR1V5eHh4eFxTZkQ3
      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
      AAAAAElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
